replicaCount: 1

image:
  repository: harbor.rbt.ru/backend
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets:
  - name: "harbor-sandbox"
nameOverride: ""
fullnameOverride: ""

ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 128m
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-headers: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-max-age: "3600"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, DELETE, OPTIONS, POST, PUT, PATCH"

  hosts:
    default: api-sandbox-{env}.rbtdigitalmobile.ru
  paths:
   - /
  tls:
    certname:
      default: rbtdigitalmobile-wild
      
service:
  type: ClusterIP
  port: 8080
  
ip_whitelist:
  default: "0.0.0.0/0"
  prod: "185.128.86.242/32"

configmap:
  SPRING_DATASOURCE_URL: 
    dev: jdbc:postgresql://172.16.0.28:5433/sandbox_dev
  SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI: 
    dev: https://auth-dev.rbtdigitalmobile.ru/realms/rbt
  SPRING_DATASOURCE_USERNAME: 
    dev: sandbox_dev
  SPRING_DATASOURCE_PASSWORD: 
    dev: iexavaenauTh6uina3Ho
  APP_OPENID_CLIENT_CLIENTID: 
    dev: sandbox-dev
  APP_OPENID_CLIENT_CLIENTSECRET: 
    dev: vCQnv5fHubRSjNoXzHNUZW8AszhxIS0Y
  SPRING_KAFKA_BOOTSTRAP_SERVERS: 
    dev: store-kafka-bootstrap.kafka:9092
  JAVA_OPTS: -Xmx512m -Xms256m
  

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


resources:
  requests:
    memory: 700Mi

resources_logstash:
  requests:
    cpu: 100m
    memory: 700Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: {}
  # - name: log
  #   emptyDir: {}
  # - name: filebeat-config
  #   configMap:
  #     name: filebeat-config

# Additional volumeMounts on the output Deployment definition.
volumeMounts: {}
  # - name: log
  #   mountPath: /var/log

nodeSelector: {}

tolerations: []

affinity: {}

# hostAliases:
#   - ip: 172.16.0.28
#     hostnames:
#     - api.mobi.rbt.local.example.com
#     - api-{{ .Values.global.env }}.rbtdigitalmobile.ru

logs:
  enabled: false
  logstash:
    image: harbor.rbt.ru/library/logstash
    version: 8.13.1
    port: 29999
    volumeMounts:
      - name: logstash-config
        #mountPath: /tmp/logstash.conf
        mountPath: /usr/share/logstash/pipeline/
      # - name: logstash-pipeline
      #   mountPath: /usr/share/logstash/pipeline/pipeline.yaml
    volumes:
      - name: logstash-config
        configMap:
          name: logstash-config
          defaultMode: 0666
          items:
            - key: logstash-global.conf
              path: logstash.conf
      # - name: logstash-pipeline
      #   configMap:
      #     name: logstash-pipeline